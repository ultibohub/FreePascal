#
#   Makefile.fpc for Free Pascal NativeNT RTL
#

[package]
main=rtl

[target]
loaders=
#units=system $(OBJPASUNIT) $(MACPASUNIT) $(ISO7185UNIT) $(EXTPASUNIT) buildrtl $(LINEINFOUNIT) $(LNFODWRFUNIT)
units=system $(UUCHARUNIT) $(OBJPASUNIT) $(ISO7185UNIT) $(EXTPASUNIT) $(CPALLUNIT) buildrtl
implicitunits=ndk ndkutils ddk \
      ctypes $(STRINGSUNIT) \
#      $(HEAPTRCUNIT)
#      initc $(CMEMUNIT) dynlibs signals \
      dos \
      rtlconsts sysconst sysutils math types \
      typinfo $(FGLUNIT) classes \
      $(CPU_UNITS) $(CHARSETUNIT) $(GETOPTSUNIT) \
      $(SOFTFPUUNIT) $(SFPUX80UNIT) $(UFLOATX80UNIT) $(SFPU128UNIT) $(UFLOAT128UNIT) \
#      sockets printer \
#      keyboard
#      sharemem exeinfo $(FPINTRESUNIT) \
      $(CP_UNITS)

# shared=$(DLLS)

rsts=math typinfo classes sysconst

[require]
nortl=y

[install]
fpcpackage=y

[default]
target=nativent

[compiler]
includedir=$(INC) $(PROCINC) $(DDKINC) $(NDKINC)
sourcedir=$(INC) $(PROCINC) $(COMMON)


[prerules]
RTL=..
INC=$(RTL)/inc
COMMON=$(RTL)/common
PROCINC=$(RTL)/$(CPU_TARGET)
DDKINC=ddk
NDKINC=ndk

UNITPREFIX=rtl
SYSTEMUNIT=system

CPU_UNITS=

ifeq ($(ARCH),i386)
CPU_UNITS=cpu $(MMXUNIT)
endif

ifeq ($(ARCH),x86_64)
CPU_UNITS=$(X86UNIT) cpu
endif

DLLS=fpcmemdll

# Paths
OBJPASDIR=$(RTL)/objpas

# Files used by windows.pp
#include $(WININC)/makefile.inc

WINDOWS_SOURCE_FILES=$(addprefix $(WININC)/,$(addsuffix .inc,$(WINDOWS_FILES)))


[rules]
.NOTPARALLEL:
SYSTEMPPU=$(addsuffix $(PPUEXT),system)

# Get the system independent include file names.
# This will set the following variables :
# SYSINCNAMES
include $(INC)/makefile.inc
SYSINCDEPS=$(addprefix $(INC)/,$(SYSINCNAMES))

# Get the processor dependent include file names.
# This will set the following variables :
# CPUINCNAMES
include $(PROCINC)/makefile.cpu
SYSCPUDEPS=$(addprefix $(PROCINC)/,$(CPUINCNAMES))

# Put system unit dependencies together.
SYSDEPS=$(SYSINCDEPS) $(SYSCPUDEPS)


#
# Loaders
#

# none

#
# Unit specific rules
#

system$(PPUEXT) : system.pp $(SYSDEPS)
        $(COMPILER) $(FPC_SYSTEM_OPT) -Us -Sg system.pp

buildrtl$(PPUEXT): buildrtl.pp system$(PPUEXT) $(OBJPASUNIT)$(PPUEXT)
        $(COMPILER) -Fi$(OBJPASDIR)/sysutils -Fi$(OBJPASDIR)/classes -Fu$(PROCINC) -I$(OBJPASDIR) -Fi$(DDKINC) -I$(INC) -Fu$(INC) -Fu$(OBJPASDIR) buildrtl

