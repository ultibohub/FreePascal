#
#   Makefile.fpc for Free Pascal Win16 RTL
#
[package]
main=rtl
[target]
loaders=prt0s prt0m prt0c prt0l prt0h 
units=system uuchar objpas strings iso7185 extpas dos \
      wintypes winprocs win31 ports dynlibs sortbase \
      sysconst rtlconsts sysutils math types typinfo fgl \
      classes charset cpu getopts cpall \
      unicodedata character ctypes
implicitunits=\
      cp1250 cp1251 cp1252 cp1253 cp1254 cp1255 cp1256 cp1257 cp1258 \
      cp437 cp646 cp737 cp775 cp850 cp852 cp855 cp856 cp857 cp860 cp861 cp862 \
      cp863 cp864 cp865 cp866 cp869 cp874 cp3021 cp8859_1 cp8859_2 cp8859_3 cp8859_4 \
      cp8859_5 cp8859_6 cp8859_7 cp8859_8 cp8859_9 cp8859_10 cp8859_11 \
      cp8859_13 cp8859_14 cp8859_15 cp8859_16 cpkoi8_r cpkoi8_u


[require]
nortl=y
[install]
fpcpackage=y
[default]
fpcdir=../..
target=msdos
cpu=i8086
[compiler]
includedir=$(INC) $(PROCINC)
sourcedir=$(INC) $(PROCINC) $(COMMON)
[prerules]
RTL=..
INC=../inc
COMMON=$(RTL)/common
PROCINC=../$(CPU_TARGET)
UNITPREFIX=rtl
SYSTEMUNIT=system

# Paths
OBJPASDIR=$(RTL)/objpas
# Insert exception handler in system unit
ifdef EXCEPTIONS_IN_SYSTEM
override FPCOPT+=-dEXCEPTIONS_IN_SYSTEM
endif
# Insert exception handler in system unit
ifdef NO_EXCEPTIONS_IN_SYSTEM
override FPCOPT+=-dNO_EXCEPTIONS_IN_SYSTEM
endif
[rules]
# Get the system independent include file names.
# This will set the following variables :
# SYSINCNAMES
include $(INC)/makefile.inc
SYSINCDEPS=$(addprefix $(INC)/,$(SYSINCNAMES))
# Get the processor dependent include file names.
# This will set the following variables :
# CPUINCNAMES
include $(PROCINC)/makefile.cpu
SYSCPUDEPS=$(addprefix $(PROCINC)/,$(CPUINCNAMES))
# Put system unit dependencies together.
SYSDEPS=$(SYSINCDEPS) $(SYSCPUDEPS)
#
# Loaders
#
prt0s$(OEXT) : prt0s.asm prt0comn.asm
	$(MAKE) $(COMPILER_UNITTARGETDIR)
        $(NASM) -f obj -o $(UNITTARGETDIRPREFIX)prt0s$(OEXT) prt0s.asm
prt0m$(OEXT) : prt0m.asm prt0comn.asm
	$(MAKE) $(COMPILER_UNITTARGETDIR)
        $(NASM) -f obj -o $(UNITTARGETDIRPREFIX)prt0m$(OEXT) prt0m.asm
prt0c$(OEXT) : prt0c.asm prt0comn.asm
	$(MAKE) $(COMPILER_UNITTARGETDIR)
        $(NASM) -f obj -o $(UNITTARGETDIRPREFIX)prt0c$(OEXT) prt0c.asm
prt0l$(OEXT) : prt0l.asm prt0comn.asm
	$(MAKE) $(COMPILER_UNITTARGETDIR)
        $(NASM) -f obj -o $(UNITTARGETDIRPREFIX)prt0l$(OEXT) prt0l.asm
prt0h$(OEXT) : prt0h.asm prt0comn.asm
	$(MAKE) $(COMPILER_UNITTARGETDIR)
        $(NASM) -f obj -o $(UNITTARGETDIRPREFIX)prt0h$(OEXT) prt0h.asm
#
# System Units (System, Objpas, Strings)
#
system$(PPUEXT) : system.pp $(SYSDEPS) wintypes.inc winprocsh.inc winprocs.inc \
                  glbheap.inc glbheaph.inc locheap.inc locheaph.inc \
                  sysdl.inc sysdlh.inc
        $(COMPILER) $(FPC_SYSTEM_OPT) -Us -Sg system.pp
	$(EXECPPAS)

uuchar$(PPUEXT): system$(PPUEXT) $(INC)/uuchar.pp
	$(COMPILER) $(INC)/uuchar.pp
	$(EXECPPAS)

objpas$(PPUEXT): $(OBJPASDIR)/objpas.pp $(INC)/except.inc system$(PPUEXT)
        $(COMPILER) -Fi$(OBJPASDIR) $(OBJPASDIR)/objpas.pp
	$(EXECPPAS)

strings$(PPUEXT) : $(INC)/strings.pp $(INC)/stringsi.inc \
                   $(PROCINC)/strings.inc $(PROCINC)/stringss.inc \
                   $(INC)/genstr.inc $(INC)/genstrs.inc \
                   system$(PPUEXT)
	$(COMPILER) $(INC)/strings.pp
	$(EXECPPAS)

iso7185$(PPUEXT) : $(INC)/iso7185.pp system$(PPUEXT)
        $(COMPILER) $(INC)/iso7185.pp
	$(EXECPPAS)

extpas$(PPUEXT) : $(INC)/extpas.pp dos$(PPUEXT) system$(PPUEXT)
        $(COMPILER) $(INC)/extpas.pp
        $(EXECPPAS)

#
# WinAPI Units
#

wintypes$(PPUEXT) : wintypes.pp wintypes.inc system$(PPUEXT)
	$(COMPILER) wintypes.pp
	$(EXECPPAS)

# winprocs uses $mode objfpc, which loads objpas unit implicitly
winprocs$(PPUEXT) : winprocs.pp winprocsh.inc winprocs.inc system$(PPUEXT) objpas$(PPUEXT) wintypes$(PPUEXT)
	$(COMPILER) winprocs.pp
	$(EXECPPAS)

# win31 uses $mode objfpc, which loads objpas unit implicitly
win31$(PPUEXT) : win31.pp system$(PPUEXT) objpas$(PPUEXT) wintypes$(PPUEXT)
	$(COMPILER) win31.pp
	$(EXECPPAS)

#
# system Dependent Units
#

ports$(PPUEXT) : ports.pp system$(PPUEXT)
	$(COMPILER) ports.pp
	$(EXECPPAS)

dynlibs$(PPUEXT) : $(INC)/dynlibs.pas dynlibs.inc objpas$(PPUEXT) system$(PPUEXT)
	$(COMPILER) $(INC)/dynlibs.pas

#
# TP7 Compatible RTL Units
#
dos$(PPUEXT) : dos.pp registers.inc \
               $(INC)/dosh.inc $(INC)/dos.inc $(INC)/fexpand.inc \
               strings$(PPUEXT) wintypes$(PPUEXT) winprocs$(PPUEXT) system$(PPUEXT)
	$(COMPILER) dos.pp
	$(EXECPPAS)

#
# Delphi Compatible Units
#
sysutils$(PPUEXT) : sysutils.pp $(wildcard $(OBJPASDIR)/sysutils/*.inc) \
                    objpas$(PPUEXT) dos$(PPUEXT) sysconst$(PPUEXT) \
                    wintypes$(PPUEXT) winprocs$(PPUEXT) system$(PPUEXT)
        $(COMPILER) -Fi$(OBJPASDIR)/sysutils sysutils.pp
	$(EXECPPAS)

classes$(PPUEXT) : classes.pp $(wildcard $(OBJPASDIR)/classes/*.inc) \
                   sysutils$(PPUEXT) typinfo$(PPUEXT) rtlconsts$(PPUEXT) \
                   types$(PPUEXT) fgl$(PPUEXT) objpas$(PPUEXT) \
                   winprocs$(PPUEXT) wintypes$(PPUEXT) sortbase$(PPUEXT) system$(PPUEXT)
        $(COMPILER) -Fi$(OBJPASDIR)/classes classes.pp
	$(EXECPPAS)

fgl$(PPUEXT) : $(OBJPASDIR)/fgl.pp types$(PPUEXT) sysutils$(PPUEXT) rtlconsts$(PPUEXT) objpas$(PPUEXT) sortbase$(PPUEXT) system$(PPUEXT)
        $(COMPILER) $(OBJPASDIR)/fgl.pp
	$(EXECPPAS)

math$(PPUEXT): $(OBJPASDIR)/math.pp $(PROCINC)/mathu.inc objpas$(PPUEXT) sysutils$(PPUEXT) system$(PPUEXT)
        $(COMPILER) $(OBJPASDIR)/math.pp
	$(EXECPPAS)

typinfo$(PPUEXT): $(OBJPASDIR)/typinfo.pp sysutils$(PPUEXT) objpas$(PPUEXT) rtlconsts$(PPUEXT) system$(PPUEXT)
        $(COMPILER) -Sg -Fi$(OBJPASDIR) $(OBJPASDIR)/typinfo.pp
	$(EXECPPAS)

types$(PPUEXT) : $(OBJPASDIR)/types.pp math$(PPUEXT) wintypes$(PPUEXT) objpas$(PPUEXT) system$(PPUEXT)
        $(COMPILER) $(OBJPASDIR)/types.pp
	$(EXECPPAS)

sysconst$(PPUEXT) : $(OBJPASDIR)/sysconst.pp objpas$(PPUEXT) system$(PPUEXT)
        $(COMPILER) $(OBJPASDIR)/sysconst.pp
	$(EXECPPAS)

rtlconsts$(PPUEXT) : $(OBJPASDIR)/rtlconsts.pp $(OBJPASDIR)/rtlconst.inc objpas$(PPUEXT) system$(PPUEXT)
        $(COMPILER) -Fi$(OBJPASDIR) $(OBJPASDIR)/rtlconsts.pp
	$(EXECPPAS)

sortbase$(PPUEXT) : $(INC)/sortbase.pp objpas$(PPUEXT) system$(PPUEXT)
	$(COMPILER) $<

#
# Other system-independent RTL Units
#
cpu$(PPUEXT) : $(PROCINC)/cpu.pp sysutils$(PPUEXT) system$(PPUEXT)
	$(COMPILER) $(PROCINC)/cpu.pp
	$(EXECPPAS)

getopts$(PPUEXT) : $(INC)/getopts.pp system$(PPUEXT)
        $(COMPILER) $(INC)/getopts.pp $(REDIR)
	$(EXECPPAS)

charset$(PPUEXT) : $(INC)/charset.pp objpas$(PPUEXT) system$(PPUEXT)
	$(COMPILER) $(INC)/charset.pp
	$(EXECPPAS)

cpall$(PPUEXT): $(RTL)/charmaps/cpall.pas system$(PPUEXT) charset$(PPUEXT)
        $(COMPILER) -Fu$(INC) -Fi$(RTL)/charmaps $(RTL)/charmaps/cpall.pas
	$(EXECPPAS)

character$(PPUEXT): $(OBJPASDIR)/character.pas sysutils$(PPUEXT) objpas$(PPUEXT) rtlconsts$(PPUEXT) unicodedata$(PPUEXT) system$(PPUEXT)
        $(COMPILER) $(OBJPASDIR)/character.pas

unicodedata$(PPUEXT) : $(OBJPASDIR)/unicodedata.pas objpas$(PPUEXT) system$(PPUEXT)
        $(COMPILER) -Fi$(OBJPASDIR) $(OBJPASDIR)/unicodedata.pas

#
# Other system-dependent RTL Units
#
ctypes$(PPUEXT) : $(INC)/ctypes.pp system$(PPUEXT)
        $(COMPILER) $(INC)/ctypes.pp $(REDIR)
	$(EXECPPAS)
